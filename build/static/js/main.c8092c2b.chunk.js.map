{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","erase","delete","Notification","props","message","undefined","className","type","Filter","value","filter","onChange","handleFilterChange","Persons","filteredPersons","persons","forEach","person","name","toLowerCase","indexOf","push","filterPersons","map","persona","handlePersonDelete","Person","number","onClick","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","then","response","data","event","target","preventDefault","personObject","result","find","concat","setTimeout","catch","error","emessage","request","window","confirm","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8092c2b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst erase = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst personService = {\r\n  getAll:getAll,\r\n  create:create,\r\n  update:update,\r\n  erase:erase\r\n}\r\n\r\nexport default personService\r\n","import './index.css'\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = (props) => {\n  if (props===null || props.message===null || props.message.message === null || props.message.message===undefined || props.message.message==='') {\n    return null\n  } else {\n    return (\n      <div className={props.message.type}>\n        {props.message.message}\n      </div>\n    )\n  }\n}\n\nconst filterPersons = (persons, filter) => {\n  const filteredPersons = []\n  persons.forEach(person => {\n    if( person.name.toLowerCase().indexOf(filter.toLowerCase()) === 0 ) {\n      filteredPersons.push(person)\n    }\n  })\n  return filteredPersons\n}\n\nconst Filter = (props) => {\n  return (\n    <input value={props.filter} onChange={props.handleFilterChange} />\n  )\n}\n\nconst Persons = (props) => {\n  const filteredPersons = filterPersons(props.persons, props.filter)\n  return (\n    <ul>\n      {filteredPersons.map(person => \n        <Person key={person.name} persona={person} handlePersonDelete={props.handlePersonDelete} />\n      )} \n    </ul>  \n  )\n}\n\nconst Person = (props) => {\n  return (\n      <li> \n        {props.persona.name} : {props.persona.number} <button value={props.persona.id} onClick={props.handlePersonDelete}>delete</button> <br />\n      </li>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n    <div>\n      name: <input type=\"text\" value={props.newName} onChange={props.handleNameChange} />\n      number: <input type=\"text\" value={props.newNumber} onChange={props.handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([\n    /*\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Artos Fella', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }    \n    */\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState({type:'',message:''})\n\n  useEffect(() => {\n    getAll()\n  }, [])\n  \n\n  const getAll = () => {\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if(newName===''||newNumber==='') {\n      alert('name and number must not be empty!')\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const result = persons.find( ({ name }) => name === newName );\n\n    if(result===undefined) {\n      personService.create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setMessage({type:'info',message:`${newName} added to server`})\n        setTimeout(() => { setMessage(null) }, 5000)\n      })\n      .catch(error => {\n          // Error\n          var emessage = 'Error saving person to server'\n          if (error.response && error.response.data) {\n            emessage = error.response.data.error\n          } else if (error.request) {\n            emessage = error.request;\n          } else {\n            emessage = error.message;\n          }        \n        setMessage({type:'error',message:`${emessage}`})\n        setTimeout(() => { setMessage(null) }, 5000)\n      })\n      setNewName('')\n      setNewNumber('')\n    } else {\n      if(window.confirm(`${newName} is already added to phonebook. Do you want to update phone number ?`)) {\n        personService.update(result.id, personObject)\n        .then(response => {\n          getAll()\n          setMessage({type:'info', message:`${newName} number updated on server`})\n          setTimeout(() => { setMessage(null) }, 5000)\n        }).catch(error => {\n          // Error\n          var emessage = 'Error updating person on server'\n          if (error.response && error.response.data) {\n            emessage = error.response.data.error\n          } else if (error.request) {\n            emessage = error.request;\n          } else {\n            emessage = error.message;\n          }        \n          setMessage({type:'error',message:`${emessage}`})\n          setTimeout(() => { setMessage(null) }, 5000)\n          getAll()\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n    }\n\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handlePersonDelete = (event) => {\n    if(window.confirm(`Are you sure you want to delete the person?`)) {\n      personService.erase(event.target.value)\n      .then(response => {\n        //setPersons(persons.filter(person => person.id !== event.target.value))\n        getAll()\n        setMessage({type:'info', message:`Person removed from server`})\n        setTimeout(() => { setMessage(null) }, 5000)\n      }).catch(error => {\n        setMessage({type:'error', message:`Error removing from server`})\n        setTimeout(() => { setMessage(null) }, 5000)\n        getAll()\n      })\n    }\n  }\n  \n\n  return (\n    <div>      \n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <p>filter names:\n        <Filter handleFilterChange={handleFilterChange} filter={filter} /> <br />\n      </p>\n      <h2>add a new: </h2>\n        <PersonForm newName={newName} newNumber={newNumber} addPerson={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons persons={persons} filter={filter} handlePersonDelete={handlePersonDelete} />\n    </div>\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}